apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: grayghost-ai
data:
  loki.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    schema_config:
      configs:
        - from: 2024-01-01
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    ruler:
      alertmanager_url: http://alertmanager:9093
      storage:
        type: local
        local:
          directory: /loki/rules
      rule_path: /loki/rules-temp
      ring:
        kvstore:
          store: inmemory
      enable_api: true

    analytics:
      reporting_enabled: false

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_label_name_length: 1024
      max_label_value_length: 2048
      max_label_names_per_series: 30
      retention_period: 336h  # 14 days

    chunk_store_config:
      max_look_back_period: 336h  # 14 days

    table_manager:
      retention_deletes_enabled: true
      retention_period: 336h  # 14 days

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: grayghost-ai
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
    - job_name: kubernetes-pods
      pipeline_stages:
      # PII Redaction Stage
      - regex:
          # Social Security Numbers
          expression: '(?i)(ssn|social.?security)[:\s]*(\d{3}-?\d{2}-?\d{4})'
          replace: '${1}: [REDACTED-SSN]'
      
      - regex:
          # Credit Card Numbers
          expression: '(\d{4}[\s-]?){3}\d{4}'
          replace: '[REDACTED-CC]'
      
      - regex:
          # Email Addresses (contextual)
          expression: '(?i)(email|e-mail)[:\s]*([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})'
          replace: '${1}: [REDACTED-EMAIL]'
      
      - regex:
          # Phone Numbers
          expression: '(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{4})'
          replace: '[REDACTED-PHONE]'
      
      - regex:
          # API Keys and Tokens
          expression: '(?i)(api[_-]?key|auth[_-]?token|bearer|jwt)[:\s]*([A-Za-z0-9+/=_-]{20,})'
          replace: '${1}: [REDACTED-TOKEN]'
      
      - regex:
          # AWS Keys
          expression: '(?i)(aws[_-]?access[_-]?key[_-]?id|aws[_-]?secret[_-]?access[_-]?key)[:\s]*([A-Za-z0-9+/=]{20,})'
          replace: '${1}: [REDACTED-AWS-KEY]'
      
      # Parse JSON logs
      - json:
          expressions:
            level: level
            msg: message
            time: timestamp
            execution_id: execution_id
            workflow_id: workflow_id
            node_id: node_id
      
      # Extract execution_id as label
      - labels:
          execution_id:
          workflow_id:
          
      # Tag PII-redacted logs
      - match:
          selector: '{job="kubernetes-pods"}'
          stages:
          - regex:
              expression: '.*\[REDACTED-.*\].*'
          - labels:
              pii_redacted: "true"
      
      # Drop debug logs in production
      - match:
          selector: '{namespace="grayghost-ai",level="debug"}'
          action: drop
          drop_counter_reason: debug_logs_dropped
      
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_controller_name
        regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
        action: replace
        target_label: __tmp_controller_name
      - source_labels:
        - __meta_kubernetes_pod_label_app
        - __meta_kubernetes_pod_label_component
        - __tmp_controller_name
        - __meta_kubernetes_pod_name
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: app
      - source_labels:
        - __meta_kubernetes_pod_label_app
        action: replace
        target_label: app
      - source_labels:
        - __meta_kubernetes_pod_label_component
        action: replace
        target_label: component
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: grayghost-ai
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
    spec:
      serviceAccountName: promtail
      containers:
      - name: promtail
        image: grafana/promtail:2.9.0
        args:
        - -config.file=/etc/promtail/config.yml
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 9080
          name: http-metrics
        volumeMounts:
        - name: config
          mountPath: /etc/promtail
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: config
        configMap:
          name: promtail-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: grayghost-ai
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
- kind: ServiceAccount
  name: promtail
  namespace: grayghost-ai