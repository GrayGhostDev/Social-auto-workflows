apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-gateway-config
  namespace: mcp
data:
  gateway.yaml: |
    server:
      http:
        port: 8080
        read_timeout: 30s
        write_timeout: 30s
      grpc:
        port: 9090
        max_connection_idle: 300s
    
    auth:
      jwt:
        issuer: "https://auth.grayghostai.com"
        audience: "mcp-gateway"
        jwks_url: "https://auth.grayghostai.com/.well-known/jwks.json"
    
    rate_limiting:
      default_qps: 100
      burst: 200
      per_agent_limits:
        visual-composer: 10
        pii-guardian: 50
        publishing-herald: 20
    
    tracing:
      enabled: true
      service_name: "mcp-gateway"
      jaeger_endpoint: "http://jaeger-collector.monitoring:14268/api/traces"
      propagation: "b3"
    
    redis:
      address: "redis-cluster.grayghostai:6379"
      stream_key: "mcp:events"
      max_length: 5000
      consumer_group: "gateway-consumers"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-gateway
  namespace: mcp
  labels:
    app: mcp-gateway
    component: gateway
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-gateway
  template:
    metadata:
      labels:
        app: mcp-gateway
        component: gateway
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "mcp-gateway"
        vault.hashicorp.com/agent-inject-secret-jwks: "secret/data/mcp/oidc_jwks"
        vault.hashicorp.com/agent-inject-secret-rate-limits: "secret/data/mcp/rate_limit_cfg"
    spec:
      serviceAccountName: mcp-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
      - name: gateway
        image: ghcr.io/ggdc/mcp-gw:v1
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        - name: metrics
          containerPort: 2112
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        - name: OTEL_EXPORTER_JAEGER_ENDPOINT
          value: "http://jaeger-collector.monitoring:14268/api/traces"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2Gi
        volumeMounts:
        - name: config
          mountPath: /etc/gateway
          readOnly: true
        - name: jwks-cache
          mountPath: /var/cache/jwks
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: mcp-gateway-config
      - name: jwks-cache
        emptyDir:
          medium: Memory
          sizeLimit: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-gateway
  namespace: mcp
  labels:
    app: mcp-gateway
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: grpc
    protocol: TCP
  selector:
    app: mcp-gateway
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-gateway
  namespace: mcp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-gateway
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-gateway
  namespace: mcp
  labels:
    app: mcp-gateway
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mcp-gateway-network-policy
  namespace: mcp
spec:
  podSelector:
    matchLabels:
      app: mcp-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: grayghostai
      podSelector:
        matchLabels:
          app: n8n
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: grayghostai
      podSelector:
        matchLabels:
          app: redis-cluster
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: jaeger-collector
    ports:
    - protocol: TCP
      port: 14268
  - to:
    - podSelector:
        matchLabels:
          app: agent-runner
    ports:
    - protocol: TCP
      port: 9000
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: vault
    ports:
    - protocol: TCP
      port: 8200