apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: grayghost-ai
  labels:
    app: n8n
    component: workflow-engine
spec:
  replicas: 3
  selector:
    matchLabels:
      app: n8n
      component: workflow-engine
  template:
    metadata:
      labels:
        app: n8n
        component: workflow-engine
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "n8n"
        vault.hashicorp.com/agent-inject-secret-db: "secret/data/n8n/db"
        vault.hashicorp.com/agent-inject-template-db: |
          {{- with secret "secret/data/n8n/db" -}}
          export DB_POSTGRESDB_PASSWORD="{{ .Data.data.password }}"
          {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "5678"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: n8n
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: n8n
        image: n8nio/n8n:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5678
          name: http
          protocol: TCP
        env:
        - name: N8N_BASIC_AUTH_ACTIVE
          value: "false"  # Using OAuth2 at ingress
        - name: N8N_HOST
          value: "n8n.grayghost.ai"
        - name: N8N_PORT
          value: "5678"
        - name: N8N_PROTOCOL
          value: "https"
        - name: DB_TYPE
          value: "postgresdb"
        - name: DB_POSTGRESDB_HOST
          value: "postgres-primary"
        - name: DB_POSTGRESDB_PORT
          value: "5432"
        - name: DB_POSTGRESDB_DATABASE
          value: "n8n"
        - name: DB_POSTGRESDB_USER
          value: "n8n"
        - name: QUEUE_BULL_REDIS_HOST
          value: "redis-cluster"
        - name: QUEUE_BULL_REDIS_PORT
          value: "6379"
        - name: N8N_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: encryption-key
        - name: EXECUTIONS_DATA_SAVE_ON_ERROR
          value: "all"
        - name: EXECUTIONS_DATA_SAVE_ON_SUCCESS
          value: "all"
        - name: EXECUTIONS_DATA_SAVE_ON_PROGRESS
          value: "true"
        - name: GENERIC_TIMEZONE
          value: "UTC"
        - name: N8N_METRICS
          value: "true"
        - name: N8N_METRICS_PREFIX
          value: "n8n_"
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 1Gi
        volumeMounts:
        - name: data
          mountPath: /home/node/.n8n
        - name: temp
          mountPath: /tmp
        - name: vault-secrets
          mountPath: /vault/secrets
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 5678
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5678
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: n8n-data
      - name: temp
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
      - name: vault-secrets
        emptyDir:
          medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: n8n
  namespace: grayghost-ai
  labels:
    app: n8n
    component: workflow-engine
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5678
    protocol: TCP
    name: http
  selector:
    app: n8n
    component: workflow-engine
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: n8n
  namespace: grayghost-ai
  labels:
    app: n8n
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-data
  namespace: grayghost-ai
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd