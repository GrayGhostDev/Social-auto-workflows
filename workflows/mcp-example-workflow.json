{
  "name": "MCP Tool Example - GitHub Integration",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24
            }
          ]
        }
      },
      "id": "a1b2c3d4-1234-5678-90ab-cdef12345678",
      "name": "Daily Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "server": "github",
        "tool": "list_issues",
        "parameters": "{\n  \"owner\": \"grayghostai\",\n  \"repo\": \"social-automation\",\n  \"state\": \"open\",\n  \"labels\": [\"bug\"]\n}",
        "options": {
          "timeout": 30000,
          "retryOnFailure": true,
          "maxRetries": 3,
          "includeMetadata": true
        }
      },
      "id": "b2c3d4e5-2345-6789-01bc-def234567890",
      "name": "Get Open Bugs",
      "type": "@grayghostai/n8n-nodes-grayghostai.mcpTool",
      "typeVersion": 1,
      "position": [450, 300],
      "credentials": {
        "mcpApi": {
          "id": "1",
          "name": "MCP API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.result.length}}",
              "operation": "larger",
              "value2": 5
            }
          ]
        }
      },
      "id": "c3d4e5f6-3456-7890-12cd-ef3456789012",
      "name": "Check Bug Count",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "server": "slack",
        "tool": "post_message",
        "parameters": "{\n  \"channel\": \"#dev-alerts\",\n  \"text\": \"⚠️ High bug count alert!\\n\\nThere are {{$node['Get Open Bugs'].json.result.length}} open bugs in the repository.\\n\\nTop priority issues:\\n{{$node['Get Open Bugs'].json.result.slice(0, 3).map(issue => `• ${issue.title}`).join('\\n')}}\"\n}",
        "options": {
          "includeMetadata": false
        }
      },
      "id": "d4e5f6a7-4567-8901-23de-f45678901234",
      "name": "Send Slack Alert",
      "type": "@grayghostai/n8n-nodes-grayghostai.mcpTool",
      "typeVersion": 1,
      "position": [850, 200],
      "credentials": {
        "mcpApi": {
          "id": "1",
          "name": "MCP API"
        }
      }
    },
    {
      "parameters": {
        "server": "github",
        "tool": "create_issue",
        "parameters": "{\n  \"owner\": \"grayghostai\",\n  \"repo\": \"social-automation\",\n  \"title\": \"Bug Triage Report - {{$now.format('yyyy-MM-dd')}}\",\n  \"body\": \"## Daily Bug Triage Report\\n\\n**Date**: {{$now.format('yyyy-MM-dd')}}\\n**Open Bugs**: {{$node['Get Open Bugs'].json.result.length}}\\n\\n### Issues Requiring Attention\\n\\n{{$node['Get Open Bugs'].json.result.slice(0, 10).map(issue => `- [${issue.title}](${issue.html_url}) - Created: ${issue.created_at}`).join('\\n')}}\\n\\n---\\n*This report was automatically generated by the n8n MCP integration.*\",\n  \"labels\": [\"meta\", \"bug-triage\"]\n}",
        "options": {
          "timeout": 30000,
          "includeMetadata": true
        }
      },
      "id": "e5f6a7b8-5678-9012-34ef-567890123456",
      "name": "Create Triage Report",
      "type": "@grayghostai/n8n-nodes-grayghostai.mcpTool",
      "typeVersion": 1,
      "position": [1050, 300],
      "credentials": {
        "mcpApi": {
          "id": "1",
          "name": "MCP API"
        }
      }
    },
    {
      "parameters": {
        "event": "tool_completed",
        "filters": {
          "server": "github",
          "tool": "create_issue",
          "successOnly": true
        },
        "options": {
          "includeServerInfo": true,
          "includeMetrics": true
        }
      },
      "id": "f6a7b8c9-6789-0123-45fa-678901234567",
      "name": "MCP Success Trigger",
      "type": "@grayghostai/n8n-nodes-grayghostai.mcpToolTrigger",
      "typeVersion": 1,
      "position": [250, 500],
      "webhookId": "mcp-success-webhook"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "summary",
              "value": "=## Workflow Summary\\n\\n**Execution Time**: {{$json.metadata.executionTime}}ms\\n**Server**: {{$json.serverInfo.name}}\\n**Tool**: {{$json.tool}}\\n**Result**: {{$json.result.html_url || 'Success'}}"
            }
          ]
        }
      },
      "id": "a7b8c9d0-7890-1234-56ab-789012345678",
      "name": "Format Summary",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [450, 500]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1234567890abcdef",
          "cachedResultUrl": "https://docs.google.com/document/d/1234567890abcdef"
        },
        "text": "={{$json.summary}}"
      },
      "id": "b8c9d0e1-8901-2345-67bc-890123456789",
      "name": "Log to Google Docs",
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [650, 500],
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "2",
          "name": "Google Docs OAuth2"
        }
      }
    }
  ],
  "connections": {
    "Daily Schedule": {
      "main": [
        [
          {
            "node": "Get Open Bugs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Open Bugs": {
      "main": [
        [
          {
            "node": "Check Bug Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Bug Count": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Triage Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Success Trigger": {
      "main": [
        [
          {
            "node": "Format Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Summary": {
      "main": [
        [
          {
            "node": "Log to Google Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "error-handler-workflow-id"
  },
  "tags": [
    {
      "id": "1",
      "name": "mcp"
    },
    {
      "id": "2",
      "name": "github"
    },
    {
      "id": "3",
      "name": "automation"
    }
  ],
  "notes": "This workflow demonstrates MCP Tool integration:\n\n1. **Scheduled Trigger**: Runs daily\n2. **GitHub Integration**: Lists open bugs using MCP Tool\n3. **Conditional Logic**: Checks if bug count exceeds threshold\n4. **Slack Alert**: Sends notification if threshold exceeded\n5. **Report Generation**: Creates GitHub issue with triage report\n6. **Event Trigger**: Separate workflow triggered by successful tool execution\n7. **Documentation**: Logs execution summary to Google Docs\n\nMake sure to configure:\n- MCP API credentials with proper JWT token\n- Slack and GitHub servers in MCP Bridge\n- Google Docs OAuth2 credentials"
}