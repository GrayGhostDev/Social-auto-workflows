name: Docker Build and Push

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'docker/n8n/**'
      - 'n8n-nodes/**'
      - 'mcp-bridge/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docker/n8n/**'
      - 'n8n-nodes/**'
      - 'mcp-bridge/**'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  REGISTRY: ghcr.io
  N8N_IMAGE_NAME: ${{ github.repository_owner }}/n8n-grayghostai
  MCP_IMAGE_NAME: ${{ github.repository_owner }}/mcp-bridge

jobs:
  build-n8n:
    name: Build n8n Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request' || github.event.inputs.push_images == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.N8N_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Copy custom nodes
        run: |
          mkdir -p docker/n8n/custom-nodes
          cp -r n8n-nodes/* docker/n8n/custom-nodes/ || true

      - name: Build and push n8n image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/n8n
          file: ./docker/n8n/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}

  build-mcp-bridge:
    name: Build MCP Bridge Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request' || github.event.inputs.push_images == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.MCP_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push MCP Bridge image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-bridge
          file: ./mcp-bridge/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push_images == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}

  scan-images:
    name: Scan Images for Vulnerabilities
    needs: [build-n8n, build-mcp-bridge]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: read
      security-events: write
    steps:
      - name: Run Trivy vulnerability scanner on n8n
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.N8N_IMAGE_NAME }}:${{ github.ref_name }}
          format: 'sarif'
          output: 'trivy-n8n.sarif'

      - name: Upload n8n Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-n8n.sarif'
          category: 'n8n-image'

      - name: Run Trivy vulnerability scanner on MCP Bridge
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.MCP_IMAGE_NAME }}:${{ github.ref_name }}
          format: 'sarif'
          output: 'trivy-mcp.sarif'

      - name: Upload MCP Bridge Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-mcp.sarif'
          category: 'mcp-bridge-image'